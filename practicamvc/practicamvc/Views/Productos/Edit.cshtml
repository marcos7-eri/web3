@model practicamvc.Models.ProductoModel
@{
    ViewData["Title"] = "Editar producto";
}

<style>
    .form-card {
        border: none;
        border-radius: 15px;
        background: white;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        padding: 2rem;
        max-width: 700px;
        margin: 0 auto;
    }

    .form-title {
        font-weight: 700;
        font-size: 1.8rem;
        margin-bottom: 1.5rem;
        text-align: center;
        color: #4a4a4a;
    }

    .form-label {
        font-weight: 600;
        color: #555;
    }

    .form-control {
        border-radius: 10px;
        padding: 10px 15px;
        border: 1px solid #ddd;
        transition: border-color 0.2s ease, box-shadow 0.2s ease;
    }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102,126,234,0.25);
        }

    .btn-gradient {
        border: none;
        border-radius: 25px;
        padding: 10px 25px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }

        .btn-gradient:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        }

    .btn-cancel {
        border-radius: 25px;
        padding: 10px 25px;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
</style>

<div class="form-card">
    <h2 class="form-title">Editar Producto</h2>
    <form asp-action="Edit" novalidate id="prodFormEdit">
        <input type="hidden" asp-for="Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>

        <div class="mb-3">
            <label asp-for="Nombre" class="form-label"></label>
            <input asp-for="Nombre" class="form-control" maxlength="120" required />
            <span asp-validation-for="Nombre" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Descripcion" class="form-label"></label>
            <textarea asp-for="Descripcion" class="form-control" rows="3" maxlength="500"></textarea>
            <span asp-validation-for="Descripcion" class="text-danger"></span>
        </div>

        <div class="row g-3">
            <div class="col-md-6">
                <label asp-for="Precio" class="form-label"></label>
                <input asp-for="Precio" class="form-control" inputmode="decimal" step="0.01" min="0" />
                <span asp-validation-for="Precio" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label asp-for="Stock" class="form-label"></label>
                <input asp-for="Stock" class="form-control" inputmode="numeric" min="0" />
                <span asp-validation-for="Stock" class="text-danger"></span>
            </div>
        </div>

        <div class="mt-4 d-flex gap-3 justify-content-center">
            <button type="submit" class="btn-gradient">Guardar</button>
            <a asp-action="Index" class="btn btn-cancel btn-outline-secondary">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const f = document.getElementById('prodFormEdit');
        function normalize(s){ return (s||'').trim().replace(/\s{2,}/g,' '); }
        f?.addEventListener('submit', e => {
            const nombre = f.querySelector('[name="Nombre"]');
            const desc = f.querySelector('[name="Descripcion"]');
            nombre.value = normalize(nombre.value);
            if(desc) desc.value = normalize(desc.value);
        });
    </script>
}
